
DROP TABLE ARTIST;

CREATE TABLE ARTIST(
ARTIST_ID INT PRIMARY KEY,
NAME VARCHAR(45),
BIRTHPLACE VARCHAR(80),
STYLE_OF_ART VARCHAR(100)
);

DESCRIBE ARTIST;


DROP TABLE ART_WORK;

ALTER TABLE ARTIST ADD ARTIST_ID INT PRIMARY KEY;
ALTER TABLE ARTIST DROP PRIMARY KEY;
DESCRIBE ARTIST;
DESCRIBE ART_WORK;
DESCRIBE CUSTOMER;

DESCRIBE ART_WORK;


CREATE TABLE ART_WORK(
ART_ID INT,
ARTWORK_ID INT PRIMARY KEY,
TITLE VARCHAR(50),
DATE_OF_CREATION DATE,
TYPE VARCHAR(100),
PRICE INT,
FOREIGN KEY (ART_ID) REFERENCES ARTIST(ARTIST_ID)
);

DESCRIBE ART_WORK;

DROP TABLE CUSTOMER;

CREATE TABLE CUSTOMER(
ID INT PRIMARY KEY,
NAME VARCHAR(50),
ADDRESS VARCHAR(100),
PHONE INT,
PURCHASED_ID INT,
FOREIGN KEY (PURCHASED_ID) REFERENCES ART_WORK(ARTWORK_ID)
);

DESCRIBE CUSTOMER;

INSERT INTO ARTIST (ARTIST_ID, NAME, BIRTHPLACE, STYLE_OF_ART) VALUES (1, 'Leonardo da Vinci', 'Vinci, Italy', 'Renaissance');
INSERT INTO ARTIST (ARTIST_ID, NAME, BIRTHPLACE, STYLE_OF_ART) VALUES (2, 'Vincent van Gogh', 'Zundert, Netherlands', 'Post-Impressionism');
INSERT INTO ARTIST (ARTIST_ID, NAME, BIRTHPLACE, STYLE_OF_ART) VALUES (3, 'Pablo Picasso', 'Málaga, Spain', 'Cubism');
INSERT INTO ARTIST (ARTIST_ID, NAME, BIRTHPLACE, STYLE_OF_ART) VALUES (4, 'Michelangelo', 'Caprese, Italy', 'High Renaissance');
INSERT INTO ARTIST (ARTIST_ID, NAME, BIRTHPLACE, STYLE_OF_ART) VALUES (5, 'Rembrandt van Rijn', 'Leiden, Netherlands', 'Baroque');

SELECT * FROM ARTIST;

-- Inserting data into the ART_WORK table
INSERT INTO ART_WORK (ART_ID, ARTWORK_ID, TITLE, DATE_OF_CREATION, TYPE, PRICE) 
VALUES (1, 1, 'Mona Lisa', TO_DATE('1503-01-01', 'YYYY-MM-DD'), 'Painting', 100000000);

INSERT INTO ART_WORK (ART_ID, ARTWORK_ID, TITLE, DATE_OF_CREATION, TYPE, PRICE) 
VALUES (1, 4, 'The Vitruvian Man', TO_DATE('1203-01-01', 'YYYY-MM-DD'), 'Painting', 984343);

INSERT INTO ART_WORK (ART_ID, ARTWORK_ID, TITLE, DATE_OF_CREATION, TYPE, PRICE) 
VALUES (1, 7, 'Santa Maria Della Neve', TO_DATE('1119-01-01', 'YYYY-MM-DD'), 'Painting', 3456767344);

INSERT INTO ART_WORK (ART_ID, ARTWORK_ID, TITLE, DATE_OF_CREATION, TYPE, PRICE) 
VALUES (2, 2, 'Starry Night', TO_DATE('1889-01-01', 'YYYY-MM-DD'), 'Painting', 80000000);

INSERT INTO ART_WORK (ART_ID, ARTWORK_ID, TITLE, DATE_OF_CREATION, TYPE, PRICE) 
VALUES (3, 3, 'Les Demoiselles d''Avignon', TO_DATE('1907-01-01', 'YYYY-MM-DD'), 'Painting', 120000000);


SELECT * FROM ART_WORK;


INSERT INTO CUSTOMER (ID, NAME, ADDRESS, PHONE, PURCHASED_ID) VALUES (1, 'John Doe', '123 Main St, Anytown', '+1234567890', 1);
INSERT INTO CUSTO9MER (ID, NAME, ADDRESS, PHONE, PURCHASED_ID) VALUES (2, 'Jane Smith', '456 Elm St, Othertown', '+9876543210', 2);
INSERT INTO CUSTOMER (ID, NAME, ADDRESS, PHONE, PURCHASED_ID) VALUES (3, 'Alice Johnson', '789 Oak St, Anothertown', '+1112223333', 3);
INSERT INTO CUSTOMER (ID, NAME, ADDRESS, PHONE, PURCHASED_ID) VALUES (4, 'SOHEL', '789 Oak St, Anothertown', '+0232231', 4);
INSERT INTO CUSTOMER (ID, NAME, ADDRESS, PHONE, PURCHASED_ID) VALUES (10, 'MD Ustadh Abu Taheri', 'Gopalgonj , 10 Banghabandhu Street', '+4523333', 7);


DESCRIBE TABLE ARTIST;

SELECT * FROM ARTIST;
SELECT * FROM ART_WORK;
SELECT * FROM CUSTOMER;
DELETE FROM ARTIST;

select table_name from user_tables;

DROP TABLE ARTIST;


SELECT table_name FROM all_tables;


BEGIN
    FOR cur_rec IN (SELECT table_name FROM user_tables) LOOP
        EXECUTE IMMEDIATE 'DROP TABLE ' || cur_rec.table_name || ' CASCADE CONSTRAINTS';
    END LOOP;
END;
/



SELECT * FROM ARTIST WHERE ARTIST_ID = (SELECT ART_ID FROM ART_WORK WHERE ARTWORK_ID = (SELECT ID FROM CUSTOMER WHERE NAME = 'John Doe'));--  (SELECT * FROM CUSTOMER WHERE NAME = 'John Doe');

WITH CUSTOMER_TEMP(A , B , C , D , E) AS (SELECT * FROM CUSTOMER)
SELECT * FROM CUSTOMER_TEMP;

SELECT * FROM ART_WORK WHERE ARTWORK_ID = (SELECT PURCHASED_ID FROM CUSTOMER WHERE ID = 1);

UPDATE ARTIST SET NAME = 'SOHEL' WHERE ARTIST_ID = (SELECT ART_ID FROM ART_WORK WHERE ARTWORK_ID = (SELECT PURCHASED_ID FROM CUSTOMER WHERE ID = 1));
UPDATE ARTIST SET NAME = 'Leonardo da Vinci' WHERE ARTIST_ID = 1;


INSERT INTO ARTIST (ARTIST_ID, NAME, BIRTHPLACE, STYLE_OF_ART) VALUES (10, 'Leonardo da Vinci', 'KUET', 'Renaissance');
DELETE FROM ARTIST WHERE ARTIST_ID = 10;

SELECT * FROM ARTIST JOIN ART_WORK ON ARTIST.ARTIST_ID = ART_WORK.ART_ID JOIN CUSTOMER ON ART_WORK.ARTWORK_ID = CUSTOMER.PURCHASED_ID;


SELECT * FROM ARTIST;
SELECT * FROM CUSTOMER;

SELECT ARTIST_ID AS ID, NAME, NULL AS BIRTHPLACE, NULL AS STYLE_OF_ART, NULL AS TITLE, NULL AS DATE_OF_CREATION, NULL AS TYPE, NULL AS PRICE, NULL AS ADDRESS, NULL AS PHONE, NULL AS PURCHASED_ID
FROM ARTIST
UNION ALL
SELECT NULL AS ID, NULL AS NAME, NULL AS BIRTHPLACE, NULL AS STYLE_OF_ART, TITLE, DATE_OF_CREATION, TYPE, PRICE, NULL AS ADDRESS, NULL AS PHONE, NULL AS PURCHASED_ID
FROM ART_WORK
UNION ALL
SELECT ID, NAME, NULL AS BIRTHPLACE, NULL AS STYLE_OF_ART, NULL AS TITLE, NULL AS DATE_OF_CREATION, NULL AS TYPE, NULL AS PRICE, ADDRESS, PHONE, PURCHASED_ID
FROM CUSTOMER;


DESCRIBE ARTIST;
DESCRIBE ART_WORK;


SELECT NULL AS ARTIST_ID , NULL AS NAME , NULL AS BIRTHPLACE FROM ARTIST
UNION ALL
SELECT NULL AS ART_ID , ARTWORK_ID , TITLE FROM ART_WORK;

SELECT * FROM ARTIST;
SELECT * FROM ART_WORK;

--INNER JOIN -> RETURNS RECORDS THAT HAVE MATCHING VALUES IN BOTH TABLES

SELECT * FROM ARTIST 
INNER JOIN ART_WORK
ON ARTIST.ARTIST_ID = ART_WORK.ART_ID;

SELECT * FROM ARTIST WHERE ARTIST_ID IN (SELECT ARTIST_ID FROM ARTIST INTERSECT SELECT ART_ID FROM ART_WORK);

SELECT * FROM ARTIST WHERE ARTIST_ID IN (SELECT ARTIST_ID FROM ARTIST MINUS SELECT ART_ID FROM ART_WORK);


SELECT * FROM ARTIST WHERE ARTIST_ID = (SELECT ART_ID FROM ART_WORK WHERE ARTWORK_ID = (SELECT ID FROM CUSTOMER WHERE NAME = 'John Doe'));--  (SELECT * FROM CUSTOMER WHERE NAME = 'John Doe');

WITH TEMP_TABLE(ARTWORK_ID , ID) AS (SELECT ART_WORK.ARTWORK_ID , CUSTOMER.ID FROM ART_WORK JOIN CUSTOMER ON ART_WORK.ARTWORK_ID = CUSTOMER.PURCHASED_ID AND CUSTOMER.PURCHASED_ID = 7)
SELECT * FROM ARTIST , TEMP_TABLE WHERE ARTIST.ARTIST_ID = (SELECT ART_ID FROM ART_WORK WHERE ARTWORK_ID = TEMP_TABLE.ARTWORK_ID);
--SELECT * FROM TEMP_TABLE;

SELECT * FROM ARTIST;
SELECT ART_WORK.ARTWORK_ID , CUSTOMER.ID FROM ART_WORK JOIN CUSTOMER ON ART_WORK.ARTWORK_ID = CUSTOMER.PURCHASED_ID AND CUSTOMER.PURCHASED_ID = 7;

--WITH TEMP(A) AS SELECT ARTIST_ID FROM ARTIST
--WITH TEMP1(B) AS SELECT NAME FROM ARTIST
--SELECT * FROM TEMP , TEMP1;

SELECT * FROM ARTIST , ART_WORK WHERE ARTIST.ARTIST_ID = ART_WORK.ARTWORK_ID;

SELECT c.NAME AS Customer_Name, COUNT(c.PURCHASED_ID) AS Total_Artworks_Purchased
FROM CUSTOMER c
GROUP BY c.NAME;


CREATE OR REPLACE PROCEDURE INSERT_ARTIST(
    ID IN INT,
    NAME IN VARCHAR2,
    BIRTHPLACE IN VARCHAR2,
    STYLE_OF_ART IN VARCHAR2
) AS
BEGIN
    INSERT INTO ARTIST (ARTIST_ID, NAME, BIRTHPLACE, STYLE_OF_ART)
    VALUES (ID, NAME, BIRTHPLACE, STYLE_OF_ART);
    COMMIT;
    DBMS_OUTPUT.PUT_LINE('Artist record inserted successfully.');
END;
/


CALL INSERT_ARTIST(1112 , 'TAHER' , 'DHAMRAI' , 'DEMO');

SELECT * FROM ARTIST;

SET SERVEROUTPUT ON
CREATE OR REPLACE PROCEDURE DELETE_ARTIST(D_ID IN INT)
AS
MSG CHAR(300);
BEGIN

MSG := 'ARTIST RECORD SUCCESSFULLY DELETED';
DELETE FROM ARTIST WHERE ARTIST_ID = D_ID;
COMMIT;
DBMS_OUTPUT.PUT_LINE(MSG);
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        DBMS_OUTPUT.PUT_LINE('ERROR');
END;
/

SELECT * FROM ARTIST;
SELECT * FROM ART_WORK;
CALL DELETE_ARTIST(15);

DELETE FROM ART_WORK WHERE ART_ID = 1;

SET SERVEROUTPUT ON
DECLARE ARTIST_RECORD ARTIST%ROWTYPE;


CREATE OR REPLACE PROCEDURE RETRIVE_RICH_ARTISTS()
IS
CURSOR ARTIST_CURSOR IS SELECT * FROM ARTIST WHERE ARTIST.ARTIST_ID IN (SELECT ART_ID FROM ART_WORK WHERE ARTWORK_ID IN (SELECT CUSTOMER.PURCHASED_ID FROM CUSTOMER)); 
ARTIST_ROW ARTIST%ROWTYPE;
BEGIN
OPEN CURSOR ARTIST_CURSOR;
FETCH ARTIST_CURSOR IN ARTIST_ROW.ARTIST_ID , ARTIST_ROW.NAME , ARTIST_ROW.BIRTHPLACE , ARTIST_ROW.STYLE_OF_ART;
WHILE ARTIST_CURSOR%FOUND
LOOP
    DBMS_OUTPUT.PUT_LINE(ARTIST_ROW.ARTIST_ID || ' ' || ARTIST_ROW.NAME);
    DBMS_OUTPUT.PUT_LINE(ARTIST_CURSOR%ROWCOUNT);
    FETCH ARTIST_CURSOR IN ARTIST_ROW.ARTIST_ID , ARTIST_ROW.NAME , ARTIST_ROW.BIRTHPLACE , ARTIST_ROW.STYLE_OF_ART;
END LOOP;
END;
/

set serveroutput on
CREATE OR REPLACE PROCEDURE RETRIEVE_RICH_ARTISTS IS
  CURSOR ARTIST_CURSOR IS SELECT * FROM ARTIST WHERE ARTIST.ARTIST_ID IN (SELECT ART_ID FROM ART_WORK WHERE ARTWORK_ID IN (SELECT CUSTOMER.PURCHASED_ID FROM CUSTOMER));
  ARTIST_ROW ARTIST%ROWTYPE;
BEGIN
  --DBMS_OUTPUT.PUTLINE(ARTIST_CURSOR.NAME);
  OPEN ARTIST_CURSOR;
      DBMS_OUTPUT.PUT_LINE('HELLO');

  LOOP
    FETCH ARTIST_CURSOR INTO ARTIST_ROW;
    EXIT WHEN ARTIST_CURSOR%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE('HELLO');
    DBMS_OUTPUT.PUT_LINE('Artist ID: ' || ARTIST_ROW.ARTIST_ID || ', Name: ' || ARTIST_ROW.NAME);
    DBMS_OUTPUT.PUT_LINE('Birthplace: ' || ARTIST_ROW.BIRTHPLACE || ', Style of Art: ' || ARTIST_ROW.STYLE_OF_ART);
    DBMS_OUTPUT.PUT_LINE('----------------------------------------');
  END LOOP;
  CLOSE ARTIST_CURSOR;
END;
/

SET SERVEROUTPUT ON;
CALL RETRIEVE_RICH_ARTISTS();

SELECT * FROM ARTIST WHERE ARTIST.ARTIST_ID IN (SELECT ART_ID FROM ART_WORK WHERE ARTWORK_ID IN (SELECT CUSTOMER.PURCHASED_ID FROM CUSTOMER))

